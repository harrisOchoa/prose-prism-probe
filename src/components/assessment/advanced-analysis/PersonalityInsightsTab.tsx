
import React from "react";
import { Button } from "@/components/ui/button";
import { Loader2, Brain, AlertCircle } from "lucide-react";
import { Progress } from "@/components/ui/progress";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { Card, CardContent } from "@/components/ui/card";
import { PersonalityInsight } from "@/services/geminiService";

interface PersonalityInsightsTabProps {
  personalityInsights: PersonalityInsight[] | null;
  loading: boolean;
  handleGenerateAnalysis: () => void;
  getAnalysisButtonLabel: (analysisType: string) => string;
  getConfidenceBadgeColor: (confidence: number) => string;
  getProgressColor: (value: number) => string;
}

const PersonalityInsightsTab: React.FC<PersonalityInsightsTabProps> = ({
  personalityInsights,
  loading,
  handleGenerateAnalysis,
  getAnalysisButtonLabel,
  getConfidenceBadgeColor,
  getProgressColor
}) => {
  return (
    <div className="space-y-6">
      <div className="flex flex-col md:flex-row justify-between items-start md:items-center gap-4">
        <div className="text-sm text-gray-500 italic max-w-xl">
          <AlertCircle className="inline-block h-4 w-4 mr-1 text-amber-500" />
          Note: These insights are based on writing style analysis only and should be considered as initial impressions.
        </div>
        <Button 
          onClick={() => handleGenerateAnalysis()}
          disabled={loading}
          className="shrink-0"
          variant={personalityInsights ? "outline" : "default"}
        >
          {loading && <Loader2 className="mr-2 h-4 w-4 animate-spin" />}
          {getAnalysisButtonLabel("personality")}
        </Button>
      </div>

      {!personalityInsights && !loading ? (
        <div className="flex flex-col items-center justify-center p-8 text-center border border-dashed rounded-lg bg-muted/40">
          <Brain className="h-12 w-12 text-gray-300 mb-3" />
          <h3 className="text-lg font-medium text-gray-600 mb-2">No Personality Insights Available</h3>
          <p className="text-sm text-gray-500 max-w-md">
            Generate insights about the candidate's personality traits based on their writing style.
          </p>
        </div>
      ) : loading ? (
        <div className="flex flex-col items-center justify-center p-12">
          <Loader2 className="h-12 w-12 animate-spin text-purple-500 mb-3" />
          <p className="text-gray-600 font-medium">Analyzing personality traits...</p>
        </div>
      ) : (
        <div className="space-y-8">
          {/* Personality Traits Grid */}
          <div className="grid md:grid-cols-2 gap-6">
            {personalityInsights?.map((insight, index) => (
              <Card key={index} className="border overflow-hidden shadow-sm hover:shadow-md transition-shadow">
                <CardContent className="p-0">
                  <div className="p-5 pb-3 flex justify-between items-start border-b">
                    <h3 className="font-semibold text-gray-800 text-lg">{insight.trait}</h3>
                    <Badge className={`${getConfidenceBadgeColor(insight.confidence)} ml-2`}>
                      {insight.confidence}% confidence
                    </Badge>
                  </div>
                  
                  <div className="p-5 pb-3">
                    <p className="text-gray-600">{insight.description}</p>
                  </div>
                  
                  <div className="px-5 pb-5">
                    <div className="flex justify-between text-xs text-gray-500 mb-1">
                      <span>Low</span>
                      <span>High</span>
                    </div>
                    <Progress 
                      value={insight.confidence} 
                      className="h-2 rounded-full"
                      style={{
                        backgroundColor: '#f1f1f1',
                        '--progress-background': getProgressColor(insight.confidence)
                      } as React.CSSProperties}
                    />
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
          
          <div className="flex justify-center">
            <div className="px-4 py-3 bg-blue-50 rounded-md text-blue-700 max-w-3xl text-sm border border-blue-100">
              <p className="flex items-start">
                <AlertCircle className="h-5 w-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0" />
                <span>
                  These personality insights are generated by analyzing writing patterns and language use. 
                  They should be used as complementary information alongside other assessment methods.
                </span>
              </p>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default PersonalityInsightsTab;
